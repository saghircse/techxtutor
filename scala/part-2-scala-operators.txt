Operators:
	-> Used to perform operations on variables and values.
	var x = 5
	var y = x + 3
Types of operators:
1. Arithmetic Operators (+, -, *, /, %)
/ Division
% modulus - It gives remainder.

10/5 -> 2
10%5 -> 0

11/2 -> 5
11%2 -> 1

2. Assignment Operators (=, +=, -=, *=, /=, %=)
var x = 5
x = x + 3 // Add x and 3, then assign to x
------------
var x = 5
x += 3 // Same as x = x + 3

3. Relational/Comparison Operators
	-> Used for comparison of two variables or values.
	-> They return either true or false.
	->	Equal To (==)
		Not Equal (!=)
		Greater Than (>)
		Less Than (<)
		Greater Than or Equal To (>=)
		Less Than or Equal To (<=)
val a = 5
val b = 8

a == b // False
a != b // True
a > b	// False
a < b 	// True
a >= b	// False
a <= b	// True
a < a	// False
a == a	// True
a <= a	//True

object HelloWorld {
	def main(args: Array[String]): Unit = {
	  val a = 5
	  val b = 8
	  
	  val et = a == b
	  val net = a != b
	  val lt = a < b
    val gt = a > b	  
	  val ltet = a <= b
	  val gtet = a >= b
	 
	  println("a == b = " + et) 
	  println("a != b = " + net) 
	  println("a < b = " + lt) 
	  println("a > b = " + gt) 
	  println("a <= b = " + ltet) 
	  println("a >= b = " + gtet) 
	 
	}
}

Output:

a == b = false
a != b = true
a < b = true
a > b = false
a <= b = true
a >= b = false

----------------
1. Write a program to perform arithmetic operations(+,-,*,/,%) on two integers.
object HelloWorld {
	def main(args: Array[String]): Unit = {
	  val a = 20
	  val b = 6
	  
	  val sum = a + b
	  val dif = a - b
	  val mul = a * b
	  val div = a / b	  
	  val rem = a % b // gives remainder
	 
	  println("a + b = " + sum) 
	  println("a - b = " + dif) 
	  println("a * b = " + mul) 
	  println("a / b = " + div) 
	  println("a % b = " + rem) 
	 
	}
}

4. Logical Operators
	-> Used to combine or manipulate boolean values.
	-> The primary logical operators are:
	a. AND(&&) : Returns true if both operands are true.
	b. OR (||) : Returns true if at least one of the operands is true.
	c. Not (!) : Reverses the boolean value of the operand.
	
Truth Table:
0 -> False 
1 -> True
---------------------------------
	a	|	b	|	a&&b|	a||b|
---------------------------------
	0	|	0	|	0	|	0	|
---------------------------------
	0	|	1	|	0	|	1	|	
---------------------------------
	1	|	0	|	0	|	1	|
---------------------------------
	1	|	1	|	1	|	1	|	
---------------------------------

var a = false
var b = true
a -> false
!a -> true
b -> true
!b -> false

a&&b -> false
!(a&&b) -> true
a||b -> true
!(a||b) -> false


object HelloWorld {
	def main(args: Array[String]): Unit = {
	  var a = false
	  var b = true
	  
	  println("a AND b : " + (a&&b))
	  println("a OR b : " + (a||b))
	  println("NOT(a AND b) : " + !(a&&b))
	  println("NOT(a OR b ) : " + !(a||b))	  
	}
}

Output:
a AND b : false
a OR b : true
NOT(a AND b) : true
NOT(a OR b ) : false

Short-Circuiting:
Scala's && and || are short-circuit operators, meaning they will stop evaluating as soon as the result is determined:
	-> For &&, if the first operand is false, the second operand is not evaluated.
	-> For ||, if the first operand is true, the second operand is not evaluated.


